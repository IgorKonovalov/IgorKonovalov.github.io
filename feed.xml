<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2017-01-20T21:20:40+03:00</updated><id>//</id><title type="html">Igor Konovalov</title><subtitle>Russia, Saint Petersburg. Novice programmer. Core skills - HTML, CSS, Javascript, Node JS. Personal blog and portfolio.</subtitle><entry><title type="html">Elementary Cellular Automaton</title><link href="/projects/2017/01/20/Cellular_Automation.html" rel="alternate" type="text/html" title="Elementary Cellular Automaton" /><published>2017-01-20T19:36:55+03:00</published><updated>2017-01-20T19:36:55+03:00</updated><id>/projects/2017/01/20/Cellular_Automation</id><content type="html" xml:base="/projects/2017/01/20/Cellular_Automation.html">&lt;p&gt;So, while working on &lt;a href=&quot;https://igorkonovalov.github.io/projects/2017/01/04/Game_of_life.html&quot;&gt;Game Of Life&lt;/a&gt; - I’ve became interested in Cellular Automation, and found another interesting example to do - Elementary cellular automaton. According to &lt;a href=&quot;https://en.wikipedia.org/wiki/Elementary_cellular_automaton&quot;&gt;Wikipedia&lt;/a&gt;, “… an elementary cellular automaton is a one-dimensional cellular automaton where there are two possible states (labeled 0 and 1) and the rule to determine the state of a cell in the next generation depends only on the current state of the cell and its two immediate neighbors.” It was  Super simple, right? But it was well challenging for me as for a novice programmer, and also lead to some new knowledge and understanding of what’s going on. It’s 255 different rules instead of three in Game Of Life, but they do not implement simultaniously, one rule per one automata. There is a big list of all the rules can be found &lt;a href=&quot;http://atlas.wolfram.com/01/01/&quot;&gt;here&lt;/a&gt;. The most interesting ones I used in my project. Also, this automata is kind of boring and I added some colour fun. So, take a look!&lt;/p&gt;

&lt;style&gt;
  button {
    float: right;
    margin-left: 3px;
    font-size: 14px;
  }
  canvas {
    margin-bottom: 10px;
  }
  select {
    min-width: 120px;
  }
  .wrapper {
    width: 740px;
  }
  #selectFirstRow {
    margin-right: 5px;
  }
&lt;/style&gt;

&lt;script src=&quot;/assets/JS/Cellular_automation/rules.js&quot;&gt;&lt;/script&gt;

&lt;canvas id=&quot;automata&quot; width=&quot;740px&quot; height=&quot;600px&quot; style=&quot;background-color: black&quot;&gt;&lt;/canvas&gt;
&lt;p&gt;Select rule:
  &lt;select id=&quot;selectRule&quot;&gt;
  &lt;/select&gt;
  Select first row:
  &lt;select id=&quot;selectFirstRow&quot;&gt;
  &lt;/select&gt;
  &lt;button id=&quot;clear&quot;&gt;Clear&lt;/button&gt;
  &lt;button id=&quot;startPause&quot;&gt;Start&lt;/button&gt;
  &lt;br /&gt;
  &lt;br /&gt;
  Select cell color:
  &lt;input type=&quot;color&quot; id=&quot;cellColor&quot; value=&quot;#ffffff&quot; /&gt;
  Select canvas color:
  &lt;input type=&quot;color&quot; id=&quot;canvasColor&quot; /&gt;
  Psychedelic mode:
  &lt;input type=&quot;checkbox&quot; id=&quot;psychedelic&quot; value=&quot;on&quot; /&gt;ON&lt;br /&gt;&lt;/p&gt;

&lt;script src=&quot;/assets/JS/Cellular_automation/index.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Source code, as always on my github: &lt;a href=&quot;https://github.com/IgorKonovalov/Little_projects/tree/master/Cellular_Automata&quot;&gt;SOURCE&lt;/a&gt;&lt;/p&gt;</content><summary type="html">So, while working on Game Of Life - I’ve became interested in Cellular Automation, and found another interesting example to do - Elementary cellular automaton. According to Wikipedia, “… an elementary cellular automaton is a one-dimensional cellular automaton where there are two possible states (labeled 0 and 1) and the rule to determine the state of a cell in the next generation depends only on the current state of the cell and its two immediate neighbors.” It was  Super simple, right? But it was well challenging for me as for a novice programmer, and also lead to some new knowledge and understanding of what’s going on. It’s 255 different rules instead of three in Game Of Life, but they do not implement simultaniously, one rule per one automata. There is a big list of all the rules can be found here. The most interesting ones I used in my project. Also, this automata is kind of boring and I added some colour fun. So, take a look!</summary></entry><entry><title type="html">Game Of Life!</title><link href="/projects/2017/01/04/Game_of_life.html" rel="alternate" type="text/html" title="Game Of Life!" /><published>2017-01-04T17:36:55+03:00</published><updated>2017-01-04T17:36:55+03:00</updated><id>/projects/2017/01/04/Game_of_life</id><content type="html" xml:base="/projects/2017/01/04/Game_of_life.html">&lt;p&gt;For a little while I’ve been working on a first real (at least for me) project - an implementation of &lt;a href=&quot;https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life&quot;&gt;Conway’s Game of Life&lt;/a&gt; in Javascript. It was one of the exercises in excellent book &lt;a href=&quot;http://eloquentjavascript.net/&quot;&gt;Eloquent Javascript&lt;/a&gt; and first one that actually made me really interested in programming process itself.
For couple of days I wasn’t eating and sleeping and just programming this thing and thinking about it. And when it was actually done - that was really amazing. I haven’t felt myself like this since childhood. Good start of the year! So, the source for the game &lt;a href=&quot;https://github.com/IgorKonovalov/Little_projects/tree/master/Game_of_Life&quot;&gt;can be found on my Github&lt;/a&gt;, and you can play it right below! The usage is very basic, but I’m sure that I will continue to contribute to the project to make it more user-friendly and nice.&lt;/p&gt;

&lt;p&gt;Click on Randomize button, then Start, relax and watch magic.&lt;/p&gt;

&lt;style&gt;
  button {
    margin: 3px;
    font-size: 14px;
  }
&lt;/style&gt;

&lt;canvas id=&quot;game&quot; width=&quot;740px&quot; height=&quot;600px&quot; style=&quot;background-color: lightgray&quot;&gt;&lt;/canvas&gt;
&lt;p&gt;&lt;br /&gt;
&lt;button id=&quot;random&quot; style=&quot;margin-left: 0px;&quot;&gt;Randomize&lt;/button&gt;
&lt;button id=&quot;step&quot; style=&quot;margin-left: 0px;&quot;&gt;Next Step&lt;/button&gt;
&lt;span&gt;Speed: &lt;/span&gt;
&lt;input type=&quot;text&quot; id=&quot;speed&quot; value=&quot;10&quot; /&gt;
&lt;button id=&quot;start&quot;&gt;Start&lt;/button&gt;
&lt;button id=&quot;pause&quot;&gt;Pause&lt;/button&gt;
&lt;button id=&quot;clear&quot;&gt;Clear&lt;/button&gt;
&lt;script src=&quot;/assets/JS/Game_of_Life/index.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;There is a lot written about this particular game - start from &lt;a href=&quot;https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life&quot;&gt;wikipedia&lt;/a&gt; and move on.
I suggest you try a few patterns (refresh page, click on canvas to change color, then start):&lt;/p&gt;

&lt;p&gt;DieHard:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/IMG/Game_of_Life/Game Of Life! - DieHard.png&quot; alt=&quot;DieHard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pentadecathlon:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/IMG/Game_of_Life/Game Of Life! - Pentadecathlon.png&quot; alt=&quot;Pentadecathlon&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pulsar:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/IMG/Game_of_Life/Game Of Life! - pulsar.png&quot; alt=&quot;Pulsar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Infinite:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/IMG/Game_of_Life/Game Of Life! - infinite.png&quot; alt=&quot;infinite&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Have fun!&lt;/p&gt;</content><summary type="html">For a little while I’ve been working on a first real (at least for me) project - an implementation of Conway’s Game of Life in Javascript. It was one of the exercises in excellent book Eloquent Javascript and first one that actually made me really interested in programming process itself.
For couple of days I wasn’t eating and sleeping and just programming this thing and thinking about it. And when it was actually done - that was really amazing. I haven’t felt myself like this since childhood. Good start of the year! So, the source for the game can be found on my Github, and you can play it right below! The usage is very basic, but I’m sure that I will continue to contribute to the project to make it more user-friendly and nice.</summary></entry><entry><title type="html">Hello World!</title><link href="/personal/2016/12/31/first_post.html" rel="alternate" type="text/html" title="Hello World!" /><published>2016-12-31T17:26:55+03:00</published><updated>2016-12-31T17:26:55+03:00</updated><id>/personal/2016/12/31/first_post</id><content type="html" xml:base="/personal/2016/12/31/first_post.html">&lt;p&gt;Hi everybody!
Partially as a little challenge to myself, partially for expiriense in English writing (I’m a native Russian) I started a blog today.
I will be using &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; for static blog, and &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub&lt;/a&gt; for hosting. The markdown syntax is totally new to me, so as english writing so many mistakes is on its way!
Soon I’ll add &lt;a href=&quot;https://disqus.com/&quot;&gt;Disqus&lt;/a&gt; for comments, and first little project is coming.&lt;/p&gt;

&lt;p&gt;Happy New Year!!!&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><summary type="html">Hi everybody!
Partially as a little challenge to myself, partially for expiriense in English writing (I’m a native Russian) I started a blog today.
I will be using Jekyll for static blog, and GitHub for hosting. The markdown syntax is totally new to me, so as english writing so many mistakes is on its way!
Soon I’ll add Disqus for comments, and first little project is coming.</summary></entry></feed>
